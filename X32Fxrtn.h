/*
 * X32Fxrtn.h
 *
 *  Created on: 4 févr. 2015
 *      Author: patrick
 */

#ifndef X32FXRTN_H_
#define X32FXRTN_H_

X32command Xfxrtn01[] = {
		{"/fxrtn/01/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/01/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/01/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/01/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/01/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/01/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/01/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/01/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/01/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/01/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/01/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/01/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/01/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/01/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/01/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/01/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/01/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/01/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/01/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/01/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/01/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/01/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/01/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/01/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/01/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/01/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/01/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/01/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/01/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/01/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn01_max = sizeof(Xfxrtn01) / sizeof(X32command);



X32command Xfxrtn02[] = {
		{"/fxrtn/02/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/02/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/02/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/02/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/02/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/02/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/02/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/02/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/02/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/02/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/02/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/02/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/02/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/02/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/02/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/02/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/02/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/02/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/02/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/02/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/02/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/02/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/02/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/02/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/02/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/02/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/02/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn02_max = sizeof(Xfxrtn02) / sizeof(X32command);



X32command Xfxrtn03[] = {
		{"/fxrtn/03/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/03/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/03/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/03/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/03/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/03/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/03/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/03/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/03/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/03/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/03/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/03/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/03/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/03/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/03/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/03/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/03/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/03/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/03/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/01/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/01/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/01/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/01/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/03/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/03/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/03/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/03/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/03/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/03/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/03/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn03_max = sizeof(Xfxrtn03) / sizeof(X32command);



X32command Xfxrtn04[] = {
		{"/fxrtn/04/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/04/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/04/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/04/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/04/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/04/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/04/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/04/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/04/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/04/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/04/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/04/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/04/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/04/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/04/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/04/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/04/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/04/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/04/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/01/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/01/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/01/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/01/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/04/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/04/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/04/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/04/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/04/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/04/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/04/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn04_max = sizeof(Xfxrtn04) / sizeof(X32command);



X32command Xfxrtn05[] = {
		{"/fxrtn/05/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/05/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/05/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/05/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/05/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/05/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/05/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/05/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/05/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/05/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/05/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/05/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/05/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/05/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/05/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/05/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/05/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/05/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/05/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/01/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/01/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/01/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/01/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/05/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/05/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/05/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/05/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/05/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/05/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/05/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn05_max = sizeof(Xfxrtn05) / sizeof(X32command);



X32command Xfxrtn06[] = {
		{"/fxrtn/06/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/06/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/06/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/06/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/06/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/06/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/06/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/06/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/06/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/06/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/06/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/06/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/06/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/06/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/06/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/06/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/06/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/06/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/06/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/06/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/06/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/06/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/06/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/06/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/06/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/06/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/06/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/06/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn06_max = sizeof(Xfxrtn06) / sizeof(X32command);



X32command Xfxrtn07[] = {
		{"/fxrtn/07/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/07/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/07/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/07/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/07/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/07/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/07/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/07/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/07/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/07/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/07/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/07/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/07/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/07/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/07/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/07/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/07/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/07/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/07/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/07/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/07/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/07/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/07/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/07/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/07/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/07/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn07_max = sizeof(Xfxrtn07) / sizeof(X32command);



X32command Xfxrtn08[] = {
		{"/fxrtn/08/config",				{CHCO}, F_FND, {0}},
		{"/fxrtn/08/config/name",		{S32}, F_XET, {0}},
		{"/fxrtn/08/config/icon",		{I32}, F_XET, {0}},
		{"/fxrtn/08/config/color",		{I32}, F_XET, {0}},
		{"/fxrtn/08/config/source",		{I32}, F_XET, {0}},
		{"/fxrtn/08/eq",					{OFFON}, F_FND, {1}},
		{"/fxrtn/08/eq/on",				{I32}, F_XET, {0}},
		{"/fxrtn/08/eq/1",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/08/eq/1/type",			{I32}, F_XET, {0}},
		{"/fxrtn/08/eq/1/f",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/1/g",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/1/q",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/2",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/08/eq/2/type",			{I32}, F_XET, {0}},
		{"/fxrtn/08/eq/2/f",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/2/g",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/2/q",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/3",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/08/eq/3/type",			{I32}, F_XET, {0}},
		{"/fxrtn/08/eq/3/f",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/3/g",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/3/q",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/4",					{CHEQ}, F_FND, {0}},
		{"/fxrtn/08/eq/4/type",			{I32}, F_XET, {0}},
		{"/fxrtn/08/eq/4/f",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/4/g",			{F32}, F_XET, {0}},
		{"/fxrtn/08/eq/4/q",			{F32}, F_XET, {0}},
		{"/fxrtn/08/mix",					{CHMX}, F_FND, {0}},
		{"/fxrtn/08/mix/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/fader",			{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/st",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/pan",			{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/mono",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/mlevel",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/01",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/08/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/08/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/02",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/02/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/02/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/03",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/03/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/03/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/03/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/03/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/04",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/04/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/04/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/05",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/05/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/05/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/05/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/05/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/06",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/06/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/06/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/07",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/07/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/07/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/07/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/07/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/08",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/08/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/08/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/09",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/09/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/09/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/09/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/09/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/10",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/10/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/10/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/11",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/11/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/11/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/11/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/11/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/12",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/12/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/12/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/13",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/13/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/13/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/13/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/13/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/14",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/14/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/14/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/15",				{CHMO}, F_FND, {0}},
		{"/fxrtn/08/mix/15/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/15/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/15/pan",		{F32}, F_XET, {0}},
		{"/fxrtn/08/mix/15/type",		{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/16",				{CHME}, F_FND, {0}},
		{"/fxrtn/08/mix/16/on",			{I32}, F_XET, {0}},
		{"/fxrtn/08/mix/16/level",		{F32}, F_XET, {0}},
		{"/fxrtn/08/grp",					{CHGRP}, F_FND, {0}},
		{"/fxrtn/08/grp/dca",			{I32}, F_XET, {0}},
		{"/fxrtn/08/grp/mute",			{I32}, F_XET, {0}},
};
int Xfxrtn08_max = sizeof(Xfxrtn08) / sizeof(X32command);

X32command	*Xfxrtnset[8] = {
		Xfxrtn01, Xfxrtn02, Xfxrtn03, Xfxrtn04,
		Xfxrtn05, Xfxrtn06, Xfxrtn07, Xfxrtn08,
};


#endif /* X32FXRTN_H_ */
