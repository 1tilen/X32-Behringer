/*
 * X32PrefStat.h
 *
 *  Created on: 4 févr. 2015
 *      Author: patrick
 */

#ifndef X32PREFSTAT_H_
#define X32PREFSTAT_H_


X32command Xprefs[] = {
//		{"/-prefs",							{I32}, F_FND, {0}},
		{"/-prefs/style",				{S32}, F_XET, {0}},
		{"/-prefs/bright",				{F32}, F_XET, {0}},
		{"/-prefs/lcdcont",				{F32}, F_XET, {0}},
		{"/-prefs/ledbright",			{F32}, F_XET, {0}},
		{"/-prefs/lamp",				{F32}, F_XET, {0}},
		{"/-prefs/lampon",				{I32}, F_XET, {0}},
		{"/-prefs/clockrate",			{I32}, F_XET, {0}},
		{"/-prefs/clocksource",			{I32}, F_XET, {0}},
		{"/-prefs/confirm_general",		{I32}, F_XET, {0}},
		{"/-prefs/confirm_overwrite",	{I32}, F_XET, {0}},
		{"/-prefs/confirm_sceneload",	{I32}, F_XET, {0}},
		{"/-prefs/viewrtn",				{I32}, F_XET, {0}},
		{"/-prefs/selfollowsbank",		{I32}, F_XET, {0}},
		{"/-prefs/sceneadvance",		{I32}, F_XET, {0}},
		{"/-prefs/safe_masterlevels",	{I32}, F_XET, {0}},
		{"/-prefs/haflags",				{I32}, F_XET, {0}},
		{"/-prefs/autosel",				{I32}, F_XET, {0}},
		{"/-prefs/show_control",		{I32}, F_XET, {0}},
		{"/-prefs/clockmode",			{I32}, F_XET, {0}},
		{"/-prefs/hardmute",			{I32}, F_XET, {0}},
		{"/-prefs/dcamute",				{I32}, F_XET, {0}},
		{"/-prefs/invertmute",			{I32}, F_XET, {0}},

//		{"/-prefs/rta",						{I32}, F_FND, {0}},
		{"/-prefs/rta/visibility",		{I32}, F_XET, {0}},
		{"/-prefs/rta/gain",			{I32}, F_XET, {0}},
		{"/-prefs/rta/autogain",		{I32}, F_XET, {0}},
		{"/-prefs/rta/pos",				{I32}, F_XET, {0}},
		{"/-prefs/rta/mode",			{I32}, F_XET, {0}},
		{"/-prefs/rta/option",			{I32}, F_XET, {0}},
		{"/-prefs/rta/det",				{I32}, F_XET, {0}},
		{"/-prefs/rta/decay",			{F32}, F_XET, {0}},
		{"/-prefs/rta/peakhold",		{I32}, F_XET, {0}},

//		{"/-prefs/remote",					{I32}, F_FND, {0}},
		{"/-prefs/remote/enable",		{I32}, F_XET, {0}},
		{"/-prefs/remote/protocol",		{I32}, F_XET, {0}},
		{"/-prefs/remote/port",			{I32}, F_XET, {0}},
		{"/-prefs/remote/ioenable",		{I32}, F_XET, {0}},
		{"/-prefs/lampon",				{I32}, F_XET, {0}},
		{"/-prefs/lamp",				{I32}, F_XET, {0}},

//		{"/-prefs/iQ",						{I32}, F_FND, {0}},
		{"/-prefs/iQ/01",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/02",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/03",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/04",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/05",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/06",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/07",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/08",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/09",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/10",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/11",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/12",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/13",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/14",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/15",				{I32}, F_XET, {0}},
		{"/-prefs/iQ/16",				{I32}, F_XET, {0}},

		{"/-prefs/card/UFifc",			{I32}, F_XET, {0}},
		{"/-prefs/card/UFmode",			{I32}, F_XET, {0}},
		{"/-prefs/card/USBmode",		{I32}, F_XET, {0}},
		{"/-prefs/card/ADATwc",			{I32}, F_XET, {0}},
		{"/-prefs/card/ADATsync",		{I32}, F_XET, {0}},
		{"/-prefs/card/MADImode",		{I32}, F_XET, {0}},
		{"/-prefs/card/MADIin",			{I32}, F_XET, {0}},
		{"/-prefs/card/MADIout",		{I32}, F_XET, {0}},
		{"/-prefs/card/MADIsrc",		{I32}, F_XET, {0}},
};
int Xprefs_max = sizeof(Xprefs) / sizeof(X32command);


X32command Xstat[] = {
//		{"/-stat/screen",					{I32}, F_FND, {0}},
		{"/-stat/screen/screen",		{I32}, F_XET, {0}},
		{"/-stat/screen/CHAN/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/METER/page",	{I32}, F_XET, {0}},
		{"/-stat/screen/ROUTE/page",	{I32}, F_XET, {0}},
		{"/-stat/screen/SETUP/page",	{I32}, F_XET, {0}},
		{"/-stat/screen/LIB/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/FX/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/MON/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/USB/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/SCENE/page",	{I32}, F_XET, {0}},
		{"/-stat/screen/ASSIGN/page",	{I32}, F_XET, {0}},
		{"/-stat/screen/USER/page",		{I32}, F_XET, {0}},
		{"/-stat/screen/mutegrp",		{I32}, F_XET, {0}},
		{"/-stat/screen/utils",			{I32}, F_XET, {0}},
		{"/-stat/userpar/17/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/18/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/19/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/20/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/21/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/22/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/23/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/24/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/33/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/34/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/35/value",		{I32}, F_XET, {0}},
		{"/-stat/userpar/36/value",		{I32}, F_XET, {0}},

//		{"/-stat/solosw",			{I32}, F_FND, {0}},
		{"/-stat/solosw/01",	{I32}, F_XET, {0}},
		{"/-stat/solosw/02",	{I32}, F_XET, {0}},
		{"/-stat/solosw/03",	{I32}, F_XET, {0}},
		{"/-stat/solosw/04",	{I32}, F_XET, {0}},
		{"/-stat/solosw/05",	{I32}, F_XET, {0}},
		{"/-stat/solosw/06",	{I32}, F_XET, {0}},
		{"/-stat/solosw/07",	{I32}, F_XET, {0}},
		{"/-stat/solosw/08",	{I32}, F_XET, {0}},
		{"/-stat/solosw/09",	{I32}, F_XET, {0}},
		{"/-stat/solosw/10",	{I32}, F_XET, {0}},
		{"/-stat/solosw/11",	{I32}, F_XET, {0}},
		{"/-stat/solosw/12",	{I32}, F_XET, {0}},
		{"/-stat/solosw/13",	{I32}, F_XET, {0}},
		{"/-stat/solosw/14",	{I32}, F_XET, {0}},
		{"/-stat/solosw/15",	{I32}, F_XET, {0}},
		{"/-stat/solosw/16",	{I32}, F_XET, {0}},
		{"/-stat/solosw/17",	{I32}, F_XET, {0}},
		{"/-stat/solosw/18",	{I32}, F_XET, {0}},
		{"/-stat/solosw/19",	{I32}, F_XET, {0}},
		{"/-stat/solosw/20",	{I32}, F_XET, {0}},
		{"/-stat/solosw/21",	{I32}, F_XET, {0}},
		{"/-stat/solosw/22",	{I32}, F_XET, {0}},
		{"/-stat/solosw/23",	{I32}, F_XET, {0}},
		{"/-stat/solosw/24",	{I32}, F_XET, {0}},
		{"/-stat/solosw/25",	{I32}, F_XET, {0}},
		{"/-stat/solosw/26",	{I32}, F_XET, {0}},
		{"/-stat/solosw/27",	{I32}, F_XET, {0}},
		{"/-stat/solosw/28",	{I32}, F_XET, {0}},
		{"/-stat/solosw/29",	{I32}, F_XET, {0}},
		{"/-stat/solosw/30",	{I32}, F_XET, {0}},
		{"/-stat/solosw/31",	{I32}, F_XET, {0}},
		{"/-stat/solosw/32",	{I32}, F_XET, {0}},
		{"/-stat/solosw/33",	{I32}, F_XET, {0}},
		{"/-stat/solosw/34",	{I32}, F_XET, {0}},
		{"/-stat/solosw/35",	{I32}, F_XET, {0}},
		{"/-stat/solosw/36",	{I32}, F_XET, {0}},
		{"/-stat/solosw/37",	{I32}, F_XET, {0}},
		{"/-stat/solosw/38",	{I32}, F_XET, {0}},
		{"/-stat/solosw/39",	{I32}, F_XET, {0}},
		{"/-stat/solosw/40",	{I32}, F_XET, {0}},
		{"/-stat/solosw/41",	{I32}, F_XET, {0}},
		{"/-stat/solosw/42",	{I32}, F_XET, {0}},
		{"/-stat/solosw/43",	{I32}, F_XET, {0}},
		{"/-stat/solosw/44",	{I32}, F_XET, {0}},
		{"/-stat/solosw/45",	{I32}, F_XET, {0}},
		{"/-stat/solosw/46",	{I32}, F_XET, {0}},
		{"/-stat/solosw/47",	{I32}, F_XET, {0}},
		{"/-stat/solosw/48",	{I32}, F_XET, {0}},
		{"/-stat/solosw/49",	{I32}, F_XET, {0}},
		{"/-stat/solosw/50",	{I32}, F_XET, {0}},
		{"/-stat/solosw/51",	{I32}, F_XET, {0}},
		{"/-stat/solosw/52",	{I32}, F_XET, {0}},
		{"/-stat/solosw/53",	{I32}, F_XET, {0}},
		{"/-stat/solosw/54",	{I32}, F_XET, {0}},
		{"/-stat/solosw/55",	{I32}, F_XET, {0}},
		{"/-stat/solosw/56",	{I32}, F_XET, {0}},
		{"/-stat/solosw/57",	{I32}, F_XET, {0}},
		{"/-stat/solosw/58",	{I32}, F_XET, {0}},
		{"/-stat/solosw/59",	{I32}, F_XET, {0}},
		{"/-stat/solosw/60",	{I32}, F_XET, {0}},
		{"/-stat/solosw/61",	{I32}, F_XET, {0}},
		{"/-stat/solosw/62",	{I32}, F_XET, {0}},
		{"/-stat/solosw/63",	{I32}, F_XET, {0}},
		{"/-stat/solosw/64",	{I32}, F_XET, {0}},
		{"/-stat/solosw/65",	{I32}, F_XET, {0}},
		{"/-stat/solosw/66",	{I32}, F_XET, {0}},
		{"/-stat/solosw/67",	{I32}, F_XET, {0}},
		{"/-stat/solosw/68",	{I32}, F_XET, {0}},
		{"/-stat/solosw/69",	{I32}, F_XET, {0}},
		{"/-stat/solosw/70",	{I32}, F_XET, {0}},
		{"/-stat/solosw/71",	{I32}, F_XET, {0}},
		{"/-stat/solosw/72",	{I32}, F_XET, {0}},

//		{"/-stat/aes50",				{I32}, F_FND, {0}},
		{"/-stat/aes50/state",		{I32}, F_XET, {0}},
		{"/-stat/aes50/A",			{I32}, F_XET, {0}},
		{"/-stat/aes50/B",			{I32}, F_XET, {0}},

//		{"/-stat",						{I32}, F_FND, {0}},
		{"/-stat/selidx",			{I32}, F_XET, {0}},
		{"/-stat/chfaderbank",		{I32}, F_XET, {0}},
		{"/-stat/grpfaderbank",		{I32}, F_XET, {0}},
		{"/-stat/sendsonfader",		{I32}, F_XET, {0}},
		{"/-stat/u1",				{I32}, F_XET, {0}}, // unknown
		{"/-stat/u2",				{I32}, F_XET, {0}}, // unknown
		{"/-stat/solo",				{I32}, F_XET, {0}},
		{"/-stat/keysolo",			{I32}, F_XET, {0}},
		{"/-stat/userbank",			{I32}, F_XET, {0}},
		{"/-stat/autosave",			{I32}, F_XET, {0}},
		{"/-stat/lock",				{I32}, F_XET, {0}},
		{"/-stat/usbmounted",		{I32}, F_XET, {0}},
		{"/-stat/remote",			{I32}, F_XET, {0}},
		{"/-stat/u3",				{I32}, F_XET, {0}}, // unknown
		{"/-stat/rtamodegeq",		{I32}, F_XET, {0}},
		{"/-stat/u4",				{I32}, F_XET, {0}}, // unknown
		{"/-stat/rtageqpost",		{I32}, F_XET, {0}},
		{"/-stat/rtasource",		{I32}, F_XET, {0}},
		{"/-stat/xcardtype",		{I32}, F_XET, {0}},
		{"/-stat/xcardsync",		{I32}, F_XET, {0}},
		{"/-stat/geqonfdr",			{I32}, F_XET, {0}},
		{"/-stat/geqpos",			{I32}, F_XET, {0}},

//		{"/-stat/tape",					{I32}, F_XET, {0}},
		{"/-stat/tape/state",		{I32}, F_XET, {0}},
		{"/-stat/tape/file",		{S32}, F_XET, {0}},
		{"/-stat/tape/etime",		{I32}, F_XET, {0}},
		{"/-stat/tape/rtime",		{I32}, F_XET, {0}},

};
int 	Xstat_max = sizeof(Xstat) / sizeof(X32command);



#endif /* X32PREFSTAT_H_ */
